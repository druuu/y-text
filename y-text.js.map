{"version":3,"file":"y-text.js","sources":["node_modules/fast-diff/diff.js","src/y-text.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int} cursor_pos Expected edit position in text1 (optional)\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos) {\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  // Check cursor_pos within bounds\n  if (cursor_pos < 0 || text1.length < cursor_pos) {\n    cursor_pos = null;\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs);\n  if (cursor_pos != null) {\n    diffs = fix_cursor(diffs, cursor_pos);\n  }\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = diff_commonPrefix(longtext.substring(i),\n                                           shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(longtext.substring(0, i),\n                                           shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n */\nfunction diff_cleanupMerge(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n};\n\n\nvar diff = diff_main;\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n\n/*\n * Modify a diff such that the cursor position points to the start of a change:\n * E.g.\n *   cursor_normalize_diff([[DIFF_EQUAL, 'abc']], 1)\n *     => [1, [[DIFF_EQUAL, 'a'], [DIFF_EQUAL, 'bc']]]\n *   cursor_normalize_diff([[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xyz']], 2)\n *     => [2, [[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xy'], [DIFF_DELETE, 'z']]]\n *\n * @param {Array} diffs Array of diff tuples\n * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!\n * @return {Array} A tuple [cursor location in the modified diff, modified diff]\n */\nfunction cursor_normalize_diff (diffs, cursor_pos) {\n  if (cursor_pos === 0) {\n    return [DIFF_EQUAL, diffs];\n  }\n  for (var current_pos = 0, i = 0; i < diffs.length; i++) {\n    var d = diffs[i];\n    if (d[0] === DIFF_DELETE || d[0] === DIFF_EQUAL) {\n      var next_pos = current_pos + d[1].length;\n      if (cursor_pos === next_pos) {\n        return [i + 1, diffs];\n      } else if (cursor_pos < next_pos) {\n        // copy to prevent side effects\n        diffs = diffs.slice();\n        // split d into two diff changes\n        var split_pos = cursor_pos - current_pos;\n        var d_left = [d[0], d[1].slice(0, split_pos)];\n        var d_right = [d[0], d[1].slice(split_pos)];\n        diffs.splice(i, 1, d_left, d_right);\n        return [i + 1, diffs];\n      } else {\n        current_pos = next_pos;\n      }\n    }\n  }\n  throw new Error('cursor_pos is out of bounds!')\n}\n\n/*\n * Modify a diff such that the edit position is \"shifted\" to the proposed edit location (cursor_position).\n *\n * Case 1)\n *   Check if a naive shift is possible:\n *     [0, X], [ 1, Y] -> [ 1, Y], [0, X]    (if X + Y === Y + X)\n *     [0, X], [-1, Y] -> [-1, Y], [0, X]    (if X + Y === Y + X) - holds same result\n * Case 2)\n *   Check if the following shifts are possible:\n *     [0, 'pre'], [ 1, 'prefix'] -> [ 1, 'pre'], [0, 'pre'], [ 1, 'fix']\n *     [0, 'pre'], [-1, 'prefix'] -> [-1, 'pre'], [0, 'pre'], [-1, 'fix']\n *         ^            ^\n *         d          d_next\n *\n * @param {Array} diffs Array of diff tuples\n * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!\n * @return {Array} Array of diff tuples\n */\nfunction fix_cursor (diffs, cursor_pos) {\n  var norm = cursor_normalize_diff(diffs, cursor_pos);\n  var ndiffs = norm[1];\n  var cursor_pointer = norm[0];\n  var d = ndiffs[cursor_pointer];\n  var d_next = ndiffs[cursor_pointer + 1];\n\n  if (d == null) {\n    // Text was deleted from end of original string,\n    // cursor is now out of bounds in new string\n    return diffs;\n  } else if (d[0] !== DIFF_EQUAL) {\n    // A modification happened at the cursor location.\n    // This is the expected outcome, so we can return the original diff.\n    return diffs;\n  } else {\n    if (d_next != null && d[1] + d_next[1] === d_next[1] + d[1]) {\n      // Case 1)\n      // It is possible to perform a naive shift\n      ndiffs.splice(cursor_pointer, 2, d_next, d)\n      return merge_tuples(ndiffs, cursor_pointer, 2)\n    } else if (d_next != null && d_next[1].indexOf(d[1]) === 0) {\n      // Case 2)\n      // d[1] is a prefix of d_next[1]\n      // We can assume that d_next[0] !== 0, since d[0] === 0\n      // Shift edit locations..\n      ndiffs.splice(cursor_pointer, 2, [d_next[0], d[1]], [0, d[1]]);\n      var suffix = d_next[1].slice(d[1].length);\n      if (suffix.length > 0) {\n        ndiffs.splice(cursor_pointer + 2, 0, [d_next[0], suffix]);\n      }\n      return merge_tuples(ndiffs, cursor_pointer, 3)\n    } else {\n      // Not possible to perform any modification\n      return diffs;\n    }\n  }\n\n}\n\n/*\n * Try to merge tuples with their neigbors in a given range.\n * E.g. [0, 'a'], [0, 'b'] -> [0, 'ab']\n *\n * @param {Array} diffs Array of diff tuples.\n * @param {Int} start Position of the first element to merge (diffs[start] is also merged with diffs[start - 1]).\n * @param {Int} length Number of consecutive elements to check.\n * @return {Array} Array of merged diff tuples.\n */\nfunction merge_tuples (diffs, start, length) {\n  // Check from (start-1) to (start+length).\n  for (var i = start + length - 1; i >= 0 && i >= start - 1; i--) {\n    if (i + 1 < diffs.length) {\n      var left_d = diffs[i];\n      var right_d = diffs[i+1];\n      if (left_d[0] === right_d[1]) {\n        diffs.splice(i, 2, [left_d[0], left_d[1] + right_d[1]]);\n      }\n    }\n  }\n  return diffs;\n}\n","/* global Y, Element */\n\nimport diff from 'fast-diff'\n\nvar monacoIdentifierTemplate = { major: 0, minor: 0 }\n\nexport default function extendYText (Y) {\n  Y.requestModules(['Array']).then(function () {\n    class YText extends Y.Array.typeDefinition['class'] {\n      constructor (os, _model, _content, args) {\n        super(os, _model, _content)\n        this.textfields = []\n        this.aceInstances = []\n        this.codeMirrorInstances = []\n        this.monacoInstances = []\n        if (args != null && _model[0] !== '_' && typeof args === 'string') {\n          this.insert(0, args)\n        }\n      }\n      toString () {\n        return this._content.map(function (c) {\n          return c.val\n        }).join('')\n      }\n      insert (pos, content) {\n        var arr = content.split('')\n        for (var i = 0; i < arr.length; i++) {\n          if (/[\\uD800-\\uDFFF]/.test(arr[i])) {\n            // is surrogate pair\n            arr[i] = arr[i] + arr[i + 1]\n            arr[i + 1] = ''\n            i++\n          }\n        }\n        super.insert(pos, arr)\n      }\n      delete (pos, length) {\n        if (length == null) { length = 1 }\n        if (typeof length !== 'number') {\n          throw new Error('length must be a number!')\n        }\n        if (typeof pos !== 'number') {\n          throw new Error('pos must be a number!')\n        }\n        if (pos + length > this._content.length || pos < 0 || length < 0) {\n          throw new Error('The deletion range exceeds the range of the array!')\n        }\n        if (length === 0) {\n          return\n        }\n        // This is for the case that part of a surrogate pair is deleted\n        // we store surrogate pairs like this: [.., '🐇', '', ..] (string, code)\n        if (this._content.length > pos + length && this._content[pos + length].val === '' && this._content[pos + length - 1].val.length === 2) {\n          // case one. first part of the surrogate pair is deleted\n          let token = this._content[pos + length - 1].val[0]\n          super.delete(pos, length + 1)\n          super.insert(pos, [token])\n        } else if (pos > 0 && this._content[pos].val === '' && this._content[pos - 1].val.length === 2) {\n          // case two. second part of the surrogate pair is deleted\n          let token = this._content[pos - 1].val[1]\n          super.delete(pos - 1, length + 1)\n          super.insert(pos - 1, [token])\n        } else {\n          super.delete(pos, length)\n        }\n      }\n      unbindAll () {\n        this.unbindTextareaAll()\n        this.unbindAceAll()\n        this.unbindCodeMirrorAll()\n        this.unbindMonacoAll()\n      }\n      // Monaco implementation\n      unbindMonaco (monacoInstance) {\n        var i = this.monacoInstances.findIndex(function (binding) {\n          return binding.editor === monacoInstance\n        })\n        if (i >= 0) {\n          var binding = this.monacoInstances[i]\n          this.unobserve(binding.yCallback)\n          binding.disposeBinding()\n          this.monacoInstances.splice(i, 1)\n        }\n      }\n      unbindMonacoAll () {\n        for (let i = this.monacoInstances.length - 1; i >= 0; i--) {\n          this.unbindMonaco(this.monacoInstances[i].editor)\n        }\n      }\n      bindMonaco (monacoInstance, options) {\n        var self = this\n        options = options || {}\n\n        // this function makes sure that either the\n        // monaco event is executed, or the yjs observer is executed\n        var token = true\n        function mutualExcluse (f) {\n          if (token) {\n            token = false\n            try {\n              f()\n            } catch (e) {\n              token = true\n              throw new Error(e)\n            }\n            token = true\n          }\n        }\n        monacoInstance.setValue(this.toString())\n\n        function monacoCallback (event) {\n          mutualExcluse(function () {\n            // compute start.. (col+row -> index position)\n            // We shouldn't compute the offset on the old model..\n            //    var start = monacoInstance.model.getOffsetAt({column: event.range.startColumn, lineNumber: event.range.startLineNumber})\n            // So we compute the offset using the _content of this type\n            for (var i = 0, line = 1; line < event.range.startLineNumber; i++) {\n              if (self._content[i].val === '\\n') {\n                line++\n              }\n            }\n            var start = i + event.range.startColumn - 1\n\n            // apply the delete operation first\n            if (event.rangeLength > 0) {\n              self.delete(start, event.rangeLength)\n            }\n            // apply insert operation\n            self.insert(start, event.text)\n          })\n        }\n        var disposeBinding = monacoInstance.onDidChangeModelContent(monacoCallback).dispose\n\n        function yCallback (event) {\n          mutualExcluse(function () {\n            let start = monacoInstance.model.getPositionAt(event.index)\n            var end, text\n            if (event.type === 'insert') {\n              end = start\n              text = event.values.join('')\n            } else if (event.type === 'delete') {\n              end = monacoInstance.model.modifyPosition(start, event.length)\n              text = ''\n            }\n            var range = {\n              startLineNumber: start.lineNumber,\n              startColumn: start.column,\n              endLineNumber: end.lineNumber,\n              endColumn: end.column\n            }\n            var id = {\n              major: monacoIdentifierTemplate.major,\n              minor: monacoIdentifierTemplate.minor++\n            }\n            monacoInstance.executeEdits('Yjs', [{\n              id: id,\n              range: range,\n              text: text,\n              forceMoveMarkers: true\n            }])\n          })\n        }\n        this.observe(yCallback)\n        this.monacoInstances.push({\n          editor: monacoInstance,\n          yCallback: yCallback,\n          monacoCallback: monacoCallback,\n          disposeBinding: disposeBinding\n        })\n      }\n      // CodeMirror implementation..\n      unbindCodeMirror (codeMirrorInstance) {\n        var i = this.codeMirrorInstances.findIndex(function (binding) {\n          return binding.editor === codeMirrorInstance\n        })\n        if (i >= 0) {\n          var binding = this.codeMirrorInstances[i]\n          this.unobserve(binding.yCallback)\n          binding.editor.off('changes', binding.codeMirrorCallback)\n          this.codeMirrorInstances.splice(i, 1)\n        }\n      }\n      unbindCodeMirrorAll () {\n        for (let i = this.codeMirrorInstances.length - 1; i >= 0; i--) {\n          this.unbindCodeMirror(this.codeMirrorInstances[i].editor)\n        }\n      }\n      bindCodeMirror (codeMirrorInstance, options) {\n        var self = this\n        options = options || {}\n\n        // this function makes sure that either the\n        // codemirror event is executed, or the yjs observer is executed\n        var token = true\n        function mutualExcluse (f) {\n          if (token) {\n            token = false\n            try {\n              f()\n            } catch (e) {\n              token = true\n              throw new Error(e)\n            }\n            token = true\n          }\n        }\n        codeMirrorInstance.setValue(this.toString())\n\n        function codeMirrorCallback (cm, deltas) {\n          mutualExcluse(function () {\n            for (var i = 0; i < deltas.length; i++) {\n              var delta = deltas[i]\n              var start = codeMirrorInstance.indexFromPos(delta.from)\n              // apply the delete operation first\n              if (delta.removed.length > 0) {\n                var delLength = 0\n                for (var j = 0; j < delta.removed.length; j++) {\n                  delLength += delta.removed[j].length\n                }\n                // \"enter\" is also a character in our case\n                delLength += delta.removed.length - 1\n                self.delete(start, delLength)\n              }\n              // apply insert operation\n              self.insert(start, delta.text.join('\\n'))\n            }\n          })\n        }\n        codeMirrorInstance.on('changes', codeMirrorCallback)\n\n        function yCallback (event) {\n          mutualExcluse(function () {\n            let from = codeMirrorInstance.posFromIndex(event.index)\n            if (event.type === 'insert') {\n              let to = from\n              codeMirrorInstance.replaceRange(event.values.join(''), from, to)\n            } else if (event.type === 'delete') {\n              let to = codeMirrorInstance.posFromIndex(event.index + event.length)\n              codeMirrorInstance.replaceRange('', from, to)\n            }\n          })\n        }\n        this.observe(yCallback)\n        this.codeMirrorInstances.push({\n          editor: codeMirrorInstance,\n          yCallback: yCallback,\n          codeMirrorCallback: codeMirrorCallback\n        })\n      }\n      unbindAce (aceInstance) {\n        var i = this.aceInstances.findIndex(function (binding) {\n          return binding.editor === aceInstance\n        })\n        if (i >= 0) {\n          var binding = this.aceInstances[i]\n          this.unobserve(binding.yCallback)\n          binding.editor.off('change', binding.aceCallback)\n          this.aceInstances.splice(i, 1)\n        }\n      }\n      unbindAceAll () {\n        for (let i = this.aceInstances.length - 1; i >= 0; i--) {\n          this.unbindAce(this.aceInstances[i].editor)\n        }\n      }\n      bindAce (aceInstance, options) {\n        var self = this\n        options = options || {}\n\n        // this function makes sure that either the\n        // ace event is executed, or the yjs observer is executed\n        var token = true\n        function mutualExcluse (f) {\n          if (token) {\n            token = false\n            try {\n              f()\n            } catch (e) {\n              token = true\n              throw new Error(e)\n            }\n            token = true\n          }\n        }\n        aceInstance.setValue(this.toString())\n\n        function aceCallback (delta) {\n          mutualExcluse(function () {\n            var start\n            var length\n\n            var aceDocument = aceInstance.getSession().getDocument()\n            if (delta.action === 'insert') {\n              start = aceDocument.positionToIndex(delta.start, 0)\n              self.insert(start, delta.lines.join('\\n'))\n            } else if (delta.action === 'remove') {\n              start = aceDocument.positionToIndex(delta.start, 0)\n              length = delta.lines.join('\\n').length\n              self.delete(start, length)\n            }\n          })\n        }\n        aceInstance.on('change', aceCallback)\n\n        aceInstance.selection.clearSelection()\n\n        // We don't that ace is a global variable\n        // see #2\n        var aceClass\n        if (typeof ace !== 'undefined' && options.aceClass == null) {\n          aceClass = ace // eslint-disable-line\n        } else {\n          aceClass = options.aceClass\n        }\n        var aceRequire = options.aceRequire || aceClass.require\n        var Range = aceRequire('ace/range').Range\n\n        function yCallback (event) {\n          var aceDocument = aceInstance.getSession().getDocument()\n          mutualExcluse(function () {\n            if (event.type === 'insert') {\n              let start = aceDocument.indexToPosition(event.index, 0)\n              aceDocument.insert(start, event.values.join(''))\n            } else if (event.type === 'delete') {\n              let start = aceDocument.indexToPosition(event.index, 0)\n              let end = aceDocument.indexToPosition(event.index + event.length, 0)\n              var range = new Range(start.row, start.column, end.row, end.column)\n              aceDocument.remove(range)\n            }\n          })\n        }\n        this.observe(yCallback)\n        this.aceInstances.push({\n          editor: aceInstance,\n          yCallback: yCallback,\n          aceCallback: aceCallback\n        })\n      }\n      bind () {\n        var e = arguments[0]\n        if (e instanceof Element) {\n          this.bindTextarea.apply(this, arguments)\n        } else if (e != null && e.session != null && e.getSession != null && e.setValue != null) {\n          this.bindAce.apply(this, arguments)\n        } else if (e != null && e.posFromIndex != null && e.replaceRange != null) {\n          this.bindCodeMirror.apply(this, arguments)\n        } else if (e != null && e.onDidChangeModelContent != null) {\n          this.bindMonaco.apply(this, arguments)\n        } else {\n          console.error('Cannot bind, unsupported editor!')\n        }\n      }\n      unbindTextarea (textarea) {\n        var i = this.textfields.findIndex(function (binding) {\n          return binding.editor === textarea\n        })\n        if (i >= 0) {\n          var binding = this.textfields[i]\n          this.unobserve(binding.yCallback)\n          var e = binding.editor\n          e.removeEventListener('input', binding.eventListener)\n          this.textfields.splice(i, 1)\n        }\n      }\n      unbindTextareaAll () {\n        for (let i = this.textfields.length - 1; i >= 0; i--) {\n          this.unbindTextarea(this.textfields[i].editor)\n        }\n      }\n      bindTextarea (textfield, domRoot) {\n        domRoot = domRoot || window; // eslint-disable-line\n        if (domRoot.getSelection == null) {\n          domRoot = window; // eslint-disable-line\n        }\n\n        // don't duplicate!\n        for (var t = 0; t < this.textfields.length; t++) {\n          if (this.textfields[t].editor === textfield) {\n            return\n          }\n        }\n        // this function makes sure that either the\n        // textfieldt event is executed, or the yjs observer is executed\n        var token = true\n        function mutualExcluse (f) {\n          if (token) {\n            token = false\n            try {\n              f()\n            } catch (e) {\n              token = true\n              throw new Error(e)\n            }\n            token = true\n          }\n        }\n\n        var self = this\n        textfield.value = this.toString()\n\n        var createRange, writeRange, writeContent, getContent\n        if (textfield.selectionStart != null && textfield.setSelectionRange != null) {\n          createRange = function (fix) {\n            var left = textfield.selectionStart\n            var right = textfield.selectionEnd\n            if (fix != null) {\n              left = fix(left)\n              right = fix(right)\n            }\n            return {\n              left: left,\n              right: right\n            }\n          }\n          writeRange = function (range) {\n            writeContent(self.toString())\n            textfield.setSelectionRange(range.left, range.right)\n          }\n          writeContent = function (content) {\n            textfield.value = content\n          }\n          getContent = function () {\n            return textfield.value\n          }\n        } else {\n          createRange = function (fix) {\n            var range = {}\n            var s = domRoot.getSelection()\n            var clength = textfield.textContent.length\n            range.left = Math.min(s.anchorOffset, clength)\n            range.right = Math.min(s.focusOffset, clength)\n            if (fix != null) {\n              range.left = fix(range.left)\n              range.right = fix(range.right)\n            }\n            var editedElement = s.focusNode\n            if (editedElement === textfield || editedElement === textfield.childNodes[0]) {\n              range.isReal = true\n            } else {\n              range.isReal = false\n            }\n            return range\n          }\n\n          writeRange = function (range) {\n            writeContent(self.toString())\n            var textnode = textfield.childNodes[0]\n            if (range.isReal && textnode != null) {\n              if (range.left < 0) {\n                range.left = 0\n              }\n              range.right = Math.max(range.left, range.right)\n              if (range.right > textnode.length) {\n                range.right = textnode.length\n              }\n              range.left = Math.min(range.left, range.right)\n              var r = document.createRange(); // eslint-disable-line\n              r.setStart(textnode, range.left)\n              r.setEnd(textnode, range.right)\n              var s = domRoot.getSelection(); // eslint-disable-line\n              s.removeAllRanges()\n              s.addRange(r)\n            }\n          }\n          writeContent = function (content) {\n            textfield.innerText = content\n            /*\n            var contentArray = content.replace(new RegExp('\\n', 'g'), ' ').split(' '); // eslint-disable-line\n            textfield.innerText = ''\n            for (var i = 0; i < contentArray.length; i++) {\n              var c = contentArray[i]\n              textfield.innerText += c\n              if (i !== contentArray.length - 1) {\n                textfield.innerHTML += '&nbsp;'\n              }\n            }\n            */\n          }\n          getContent = function () {\n            return textfield.innerText\n          }\n        }\n        writeContent(this.toString())\n\n        function yCallback (event) {\n          mutualExcluse(() => {\n            var oPos, fix\n            if (event.type === 'insert') {\n              oPos = event.index\n              fix = function (cursor) { // eslint-disable-line\n                if (cursor <= oPos) {\n                  return cursor\n                } else {\n                  cursor += 1\n                  return cursor\n                }\n              }\n              var r = createRange(fix)\n              writeRange(r)\n            } else if (event.type === 'delete') {\n              oPos = event.index\n              fix = function (cursor) { // eslint-disable-line\n                if (cursor < oPos) {\n                  return cursor\n                } else {\n                  cursor -= 1\n                  return cursor\n                }\n              }\n              r = createRange(fix)\n              writeRange(r)\n            }\n          })\n        }\n        this.observe(yCallback)\n\n        var textfieldObserver = function textfieldObserver () {\n          mutualExcluse(function () {\n            var r = createRange(function (x) { return x })\n            var oldContent = self.toString()\n            var content = getContent()\n            var diffs = diff(oldContent, content, r.left)\n            var pos = 0\n            for (var i = 0; i < diffs.length; i++) {\n              var d = diffs[i]\n              if (d[0] === 0) { // EQUAL\n                pos += d[1].length\n              } else if (d[0] === -1) { // DELETE\n                self.delete(pos, d[1].length)\n              } else { // INSERT\n                self.insert(pos, d[1])\n                pos += d[1].length\n              }\n            }\n          })\n        }\n        textfield.addEventListener('input', textfieldObserver)\n        this.textfields.push({\n          editor: textfield,\n          yCallback: yCallback,\n          eventListener: textfieldObserver\n        })\n      }\n      _destroy () {\n        this.unbindAll()\n        this.textfields = null\n        this.aceInstances = null\n        super._destroy()\n      }\n    }\n    Y.extend('Text', new Y.utils.CustomTypeDefinition({\n      name: 'Text',\n      class: YText,\n      struct: 'List',\n      parseArguments: function (arg) {\n        if (typeof arg === 'string') {\n          return [this, arg]\n        } else {\n          return [this, null]\n        }\n      },\n      initType: function YTextInitializer (os, model) {\n        var _content = []\n        Y.Struct.List.map.call(this, model, function (op) {\n          if (op.hasOwnProperty('opContent')) {\n            throw new Error('Text must not contain types!')\n          } else {\n            op.content.forEach(function (c, i) {\n              _content.push({\n                id: [op.id[0], op.id[1] + i],\n                val: op.content[i]\n              })\n            })\n          }\n        })\n        return new YText(os, model.id, _content)\n      },\n      createType: function YTextCreator (os, model, args) {\n        return new YText(os, model.id, [], args)\n      }\n    }))\n  })\n}\n\nif (typeof Y !== 'undefined') {\n  extendYText(Y)\n}\n"],"names":["diff_main","text1","text2","cursor_pos","DIFF_EQUAL","length","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","diff_compute_","unshift","push","fix_cursor","DIFF_INSERT","DIFF_DELETE","longtext","shorttext","i","indexOf","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","concat","diff_bisect_","text1_length","text2_length","max_d","Math","ceil","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","x1","k1_offset","y1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","min","pointermid","pointerstart","floor","pointerend","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","j","best_common","prefixLength","suffixLength","hm1","hm2","diff_cleanupMerge","pointer","count_delete","count_insert","text_delete","text_insert","splice","pop","changes","cursor_normalize_diff","current_pos","next_pos","slice","split_pos","d_left","d_right","Error","norm","ndiffs","cursor_pointer","d_next","merge_tuples","suffix","start","left_d","right_d","extendYText","Y","requestModules","then","YText","os","_model","_content","args","textfields","aceInstances","codeMirrorInstances","monacoInstances","insert","this","map","c","val","join","pos","content","arr","split","test","token","unbindTextareaAll","unbindAceAll","unbindCodeMirrorAll","unbindMonacoAll","monacoInstance","findIndex","binding","editor","unobserve","yCallback","disposeBinding","unbindMonaco","options","mutualExcluse","f","e","monacoCallback","event","line","range","startLineNumber","self","startColumn","rangeLength","delete","text","end","model","getPositionAt","index","type","values","modifyPosition","lineNumber","column","id","monacoIdentifierTemplate","major","minor","executeEdits","setValue","toString","onDidChangeModelContent","dispose","observe","codeMirrorInstance","off","codeMirrorCallback","unbindCodeMirror","cm","deltas","indexFromPos","from","removed","delLength","posFromIndex","to","replaceRange","on","aceInstance","aceCallback","unbindAce","aceDocument","getSession","getDocument","action","positionToIndex","lines","indexToPosition","Range","row","remove","selection","clearSelection","aceClass","ace","aceRequire","require","arguments","Element","bindTextarea","apply","session","bindAce","bindCodeMirror","bindMonaco","error","textarea","removeEventListener","eventListener","unbindTextarea","textfield","domRoot","oPos","fix","cursor","r","createRange","window","getSelection","t","value","writeRange","writeContent","getContent","selectionStart","setSelectionRange","left","right","selectionEnd","s","clength","textContent","anchorOffset","focusOffset","editedElement","focusNode","childNodes","isReal","textnode","max","document","setStart","setEnd","removeAllRanges","addRange","innerText","textfieldObserver","oldContent","diff","addEventListener","unbindAll","typeDefinition","extend","utils","CustomTypeDefinition","arg","Struct","List","call","op","hasOwnProperty","forEach","INSERT","DELETE","EQUAL"],"mappings":"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"}